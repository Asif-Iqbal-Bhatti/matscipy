# This is partially adopted from scipy.
# See: https://github.com/scipy/scipy/blob/main/.github/workflows/wheels.yml
# License: 3-clause BSD, https://github.com/scipy/scipy/blob/main/LICENSE.txt

name: Build wheels

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }} ${{ matrix.buildplat[2] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      matrix:
        # Github Actions doesn't support pairing matrix values together, let's improvise
        # https://github.com/github/feedback/discussions/7835#discussioncomment-1769026
        buildplat:
        - [ubuntu-20.04, manylinux, x86_64]
        - [macos-10.15, macosx, x86_64]
        - [macos-12, macosx, arm64]
        - [windows-2019, win, AMD64]

        python: [["cp38", "3.8"], ["cp39", "3.9"], ["cp310", "3.10"], ["cp311", "3.11"]]
        # python[0] is used to specify the python versions made by cibuildwheel
        # python[1] is installed by actions/setup-python for the separate
        # macosx_arm64 build. Once cibuildwheel can do the macosx_arm64 cross build
        # we can get rid of this duplication and just have ["cp38", "cp39"].
        # The actions/setup-python can only use the form ["3.8"].
        exclude:
          - buildplat: [macos-12, macosx, arm64]
            python: ["cp39", "3.9"]
          - buildplat: [macos-12, macosx, arm64]
            python: ["cp310", "3.10"]
          - buildplat: [macos-12, macosx, arm64]
            python: ["cp311", "3.11"]
      fail-fast: false

    env:
      IS_32_BIT: ${{ matrix.buildplat[2] == 'x86' }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: win_amd64 - install rtools
        run: |
          # mingw-w64
          choco install rtools --no-progress
          echo "c:\rtools40\ucrt64\bin;" >> $env:GITHUB_PATH
        if: ${{ runner.os == 'Windows' && env.IS_32_BIT == 'false' }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.3
        env:
          CIBW_BUILD: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}*
          CIBW_ARCHS: ${{ matrix.buildplat[2] }}
          CIBW_ENVIRONMENT_PASS_LINUX: RUNNER_OS

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          name: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}

      - name: Release wheels
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: wheelhouse/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check tag
        id: check-tag
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo ::set-output name=match::true
          fi
        shell: bash

      - name: Deploy to PyPI
        if: steps.check-tag.outputs.match == 'true'
        run: |
          pip install twine
          twine upload wheelhouse/*.whl
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        shell: bash
